
##################################################
#                                                #
# DO NOT EDIT THIS FILE MANUALLY                 #
# AUTOMATICALLY CREATED WITH docker-builder.sh   #
#                                                #
##################################################
  

FROM ubuntu:14.04
MAINTAINER whatwedo GmbH <welove@whatwedo.ch>
ENV DEBIAN_FRONTEND noninteractive
ENV HOME /root
RUN export INITRD=no && \
mkdir -p /etc/container_environment && \
echo -n no > /etc/container_environment/INITRD && \
sed -i 's/^#\s*\(deb.*universe\)$/\1/g' /etc/apt/sources.list && \
sed -i 's/^#\s*\(deb.*multiverse\)$/\1/g' /etc/apt/sources.list && \
apt-get update -y && \
apt-get upgrade -y && \
apt-get install -y apt-transport-https ca-certificates software-properties-common && \
apt-get install -y language-pack-en && \
locale-gen en_US && \
update-locale LANG=en_US.UTF-8 LC_CTYPE=en_US.UTF-8 && \
echo -n en_US.UTF-8 > /etc/container_environment/LANG && \
echo -n en_US.UTF-8 > /etc/container_environment/LC_CTYPE && \
apt-get install localepurge
ENV TERM dumb
RUN echo "#\0041/bin/bash" > /bin/upstart && \
chmod 755 /bin/upstart
ADD files/firstboot /bin
RUN echo "/bin/firstboot" >> /bin/upstart && \
chmod 755 /bin/firstboot
VOLUME  ["/etc/firstboot"]
CMD /bin/upstart
ADD files/motd /etc
RUN apt-get install -y curl less nano wget unzip && \
apt-get install -y apache2
ENV APACHE_RUN_USER www-data
ENV APACHE_RUN_GROUP www-data
ENV APACHE_LOG_DIR /var/log/apache2
ENV APACHE_PID_FILE /var/run/apache2.pid
ENV APACHE_RUN_DIR /var/run/apache2
ENV APACHE_LOCK_DIR /var/lock/apache2
RUN mkdir -p $APACHE_RUN_DIR $APACHE_LOCK_DIR $APACHE_LOG_DIR && \
rm -rf /var/www/html/* && \
chown -R www-data /var/www/ && \
chmod -R 755 /var/www/ && \
apt-get install php5-cli php5-common php5-cgi php5-curl php5-imagick php5-imap php5-pgsql php5-sqlite php5-mysql php5-fpm php5-mcrypt php5-ldap php5-json php5-intl php5-gd -y && \
echo "cgi.fix_pathinfo = 0;" >> /etc/php5/fpm/php.ini && \
chmod -R 777 /var/lib/php5 && \
apt-get install -y libapache2-mod-php5 && \
wget --quiet -O - http://packages.icinga.org/icinga.key | apt-key add - && \
echo "deb http://packages.icinga.org/ubuntu icinga-trusty main" >> /etc/apt/sources.list && \
apt-get update -y && \
apt-get -y install icinga2 icinga2-ido-mysql icinga2-classicui nagios-plugins icingaweb2 && \
apt-get -y install nagios-nrpe-plugin --no-install-recommends && \
icinga2 feature enable ido-mysql && \
icinga2 feature enable command && \
rm /etc/dbconfig-common/icinga2-ido-mysql.conf
ADD files/icinga/conf /etc/dbconfig-common
ADD files/icinga/plugins /usr/lib/nagios/plugins
RUN chmod 755 /usr/lib/nagios/plugins/check_ssl_cert && \
apt-get -y install libwww-perl libcrypt-ssleay-perl && \
wget https://raw.github.com/tinyspeck/services-examples/master/nagios.pl && \
mv nagios.pl /usr/local/bin/slack_nagios.pl && \
chmod 755 /usr/local/bin/slack_nagios.pl && \
wget https://raw.githubusercontent.com/bfg/nagios-twilio/master/bin/twilio-sms && \
mv twilio-sms /usr/local/bin && \
chmod 755 /usr/local/bin/twilio-sms && \
/etc/init.d/icinga2 start && sleep 30 && /etc/init.d/icinga2 stop && \
echo '<?php header("location: /icingaweb2"); ?>' > /var/www/html/index.php && \
echo 'date.timezone = "Europe/Zurich"' >> /etc/php5/apache2/php.ini && \
echo "icingacli setup config directory --group icingaweb2" >> /bin/firstboot && \
echo 'echo "---------------------------------------------------"' >> /bin/firstboot && \
echo "icingacli setup token create" >> /bin/firstboot && \
echo 'echo "---------------------------------------------------"' >> /bin/firstboot && \
echo 'echo "dbc_dbuser=\"${DB_USER}\"" >> /etc/dbconfig-common/icinga2-ido-mysql.conf' >> /bin/firstboot && \
echo 'echo "dbc_dbpass=\"${DB_PW}\"" >> /etc/dbconfig-common/icinga2-ido-mysql.conf' >> /bin/firstboot && \
echo 'echo "dbc_dbserver=\"${DB_SERVER}\"" >> /etc/dbconfig-common/icinga2-ido-mysql.conf' >> /bin/firstboot && \
echo 'echo "dbc_dbport=\"${DB_PORT}\"" >> /etc/dbconfig-common/icinga2-ido-mysql.conf' >> /bin/firstboot && \
echo 'echo "dbc_dbname=\"${DB_NAME}\"" >> /etc/dbconfig-common/icinga2-ido-mysql.conf' >> /bin/firstboot && \
echo 'echo "library \"db_ido_mysql\"" > /etc/icinga2/features-available/ido-mysql.conf' >> /bin/firstboot && \
echo 'echo "object IdoMysqlConnection \"ido-mysql\" {" >> /etc/icinga2/features-available/ido-mysql.conf' >> /bin/firstboot && \
echo 'echo "user = \"${DB_USER}\"," >> /etc/icinga2/features-available/ido-mysql.conf' >> /bin/firstboot && \
echo 'echo "password = \"${DB_PW}\"," >> /etc/icinga2/features-available/ido-mysql.conf' >> /bin/firstboot && \
echo 'echo "host = \"${DB_SERVER}\"," >> /etc/icinga2/features-available/ido-mysql.conf' >> /bin/firstboot && \
echo 'echo "port = \"${DB_PORT}\"" >> /etc/icinga2/features-available/ido-mysql.conf' >> /bin/firstboot && \
echo 'echo "database = \"${DB_NAME}\"" >> /etc/icinga2/features-available/ido-mysql.conf' >> /bin/firstboot && \
echo 'echo "}" >> /etc/icinga2/features-available/ido-mysql.conf' >> /bin/firstboot && \
echo 'htpasswd -b -c /etc/icinga2-classicui/htpasswd.users icingaadmin ${ICINGAADMIN_PW}' >> /bin/firstboot && \
echo 'sleep 30' >> /bin/firstboot && \
echo 'mysql -u ${DB_USER} -p${DB_PW} -h ${DB_SERVER} -P ${DB_PORT} -e "CREATE DATABASE ${DB_NAME}"' >> /bin/firstboot && \
echo 'mysql -u ${DB_USER} -p${DB_PW} -h ${DB_SERVER} -D ${DB_NAME} -P ${DB_PORT} < /usr/share/icinga2-ido-mysql/schema/mysql.sql' >> /bin/firstboot && \
apt-get autoremove -y && \
apt-get clean -y && \
rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
echo -n "rm -rf /run/httpd/* && /usr/sbin/icinga2 daemon & apache2 -D FOREGROUND" >> /bin/upstart
VOLUME  ["/etc/icinga2", "/etc/icingaweb2", "/var/lib/icinga2", "/etc/icinga2-classicui"]
