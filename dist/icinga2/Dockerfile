
##################################################
#                                                #
# DO NOT EDIT THIS FILE MANUALLY                 #
# AUTOMATICALLY CREATED WITH docker-builder.sh   #
#                                                #
##################################################
  
#BUILT AT: Don Jul  9 12:06:28 CEST 2015

  
#whatwedo Icinga2 image

FROM ubuntu:14.04

#Maintainer
MAINTAINER whatwedo GmbH <welove@whatwedo.ch>

#Base settings
ENV DEBIAN_FRONTEND noninteractive
ENV HOME /root

#Prevent initramfs updates from trying to run grub and lilo.
#https://journal.paul.querna.org/articles/2013/10/15/docker-ubuntu-on-rackspace/
#http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=594189
RUN export INITRD=no
RUN mkdir -p /etc/container_environment
RUN echo -n no > /etc/container_environment/INITRD

## Enable Ubuntu Universe and Multiverse.
RUN sed -i 's/^#\s*\(deb.*universe\)$/\1/g' /etc/apt/sources.list
RUN sed -i 's/^#\s*\(deb.*multiverse\)$/\1/g' /etc/apt/sources.list

#Update system
RUN apt-get update -y
RUN apt-get upgrade -y

#Install HTTPS support for APT
RUN apt-get install -y apt-transport-https ca-certificates software-properties-common

#Fix locales
RUN apt-get install -y language-pack-en
RUN locale-gen en_US
RUN update-locale LANG=en_US.UTF-8 LC_CTYPE=en_US.UTF-8
RUN echo -n en_US.UTF-8 > /etc/container_environment/LANG
RUN echo -n en_US.UTF-8 > /etc/container_environment/LC_CTYPE
RUN apt-get install localepurge

#Fix: TERM environment variable not set.
ENV TERM dumb

#Create upstart script
RUN echo "#\0041/bin/bash" > /bin/upstart
RUN chmod 755 /bin/upstart

#Add firstbootscript
ADD files/firstboot /bin
RUN echo "/bin/firstboot" >> /bin/upstart
RUN chmod 755 /bin/firstboot

#Set upstart script
CMD /bin/upstart

#Set motd
ADD files/motd /etc

#Install often used tools
RUN apt-get install -y curl less nano wget unzip

#Install apache and openssl
RUN apt-get install -y apache2

#Apache settings
ENV APACHE_RUN_USER www-data
ENV APACHE_RUN_GROUP www-data
ENV APACHE_LOG_DIR /var/log/apache2
ENV APACHE_PID_FILE /var/run/apache2.pid
ENV APACHE_RUN_DIR /var/run/apache2
ENV APACHE_LOCK_DIR /var/lock/apache2
RUN mkdir -p $APACHE_RUN_DIR $APACHE_LOCK_DIR $APACHE_LOG_DIR

#Remove default files
RUN rm -rf /var/www/html/*
#Install PHP
RUN apt-get install php5-cli php5-common php5-cgi php5-curl php5-imagick php5-imap php5-pgsql php5-sqlite php5-mysql php5-fpm php5-mcrypt php5-ldap php5-json php5-intl php5-gd -y

#Set php.ini defaults
RUN echo "cgi.fix_pathinfo = 0;" >> /etc/php5/fpm/php.ini

#Fix session permission error
RUN chmod -R 777 /var/lib/php5


#Install mod_php
RUN apt-get install -y libapache2-mod-php5

#Add icinga repo
RUN wget --quiet -O - http://packages.icinga.org/icinga.key | apt-key add -
RUN echo "deb http://packages.icinga.org/ubuntu icinga-trusty main" >> /etc/apt/sources.list
RUN apt-get update -y

#Install icinga and nagios plugins
RUN apt-get -y install icinga2 icinga2-ido-mysql nagios-plugins icingaweb2

#Enable features
RUN icinga2 feature enable ido-mysql
RUN icinga2 feature enable command

#Add icinga config
RUN rm /etc/dbconfig-common/icinga2-ido-mysql.conf
ADD files/icinga /etc/dbconfig-common

#Start and stop icinga (Init system)
RUN /etc/init.d/icinga2 start && sleep 30 && /etc/init.d/icinga2 stop

#Auto redirect to icinga-web
RUN echo '<?php header("location: /icingaweb2"); ?>' > /var/www/html/index.php

#Fix timezone
RUN echo 'date.timezone = "Europe/Zurich"' >> /etc/php5/apache2/php.ini

#Edit firstboot script

#Generate setup token
RUN echo "icingacli setup config directory --group icingaweb2" >> /bin/firstboot
RUN echo 'echo "---------------------------------------------------"' >> /bin/firstboot
RUN echo "icingacli setup token create" >> /bin/firstboot
RUN echo 'echo "---------------------------------------------------"' >> /bin/firstboot

#db-config settings
RUN echo 'echo "dbc_dbuser=\"${DB_USER}\"" >> /etc/dbconfig-common/icinga2-ido-mysql.conf' >> /bin/firstboot
RUN echo 'echo "dbc_dbpass=\"${DB_PW}\"" >> /etc/dbconfig-common/icinga2-ido-mysql.conf' >> /bin/firstboot
RUN echo 'echo "dbc_dbserver=\"${DB_SERVER}\"" >> /etc/dbconfig-common/icinga2-ido-mysql.conf' >> /bin/firstboot
RUN echo 'echo "dbc_dbport=\"${DB_PORT}\"" >> /etc/dbconfig-common/icinga2-ido-mysql.conf' >> /bin/firstboot
RUN echo 'echo "dbc_dbname=\"${DB_NAME}\"" >> /etc/dbconfig-common/icinga2-ido-mysql.conf' >> /bin/firstboot

#Icinga db settings
RUN echo 'echo "library \"db_ido_mysql\"" > /etc/icinga2/features-available/ido-mysql.conf' >> /bin/firstboot
RUN echo 'echo "object IdoMysqlConnection \"ido-mysql\" {" >> /etc/icinga2/features-available/ido-mysql.conf' >> /bin/firstboot
RUN echo 'echo "user = \"${DB_USER}\"," >> /etc/icinga2/features-available/ido-mysql.conf' >> /bin/firstboot
RUN echo 'echo "password = \"${DB_PW}\"," >> /etc/icinga2/features-available/ido-mysql.conf' >> /bin/firstboot
RUN echo 'echo "host = \"${DB_SERVER}\"," >> /etc/icinga2/features-available/ido-mysql.conf' >> /bin/firstboot
RUN echo 'echo "port = \"${DB_PORT}\"" >> /etc/icinga2/features-available/ido-mysql.conf' >> /bin/firstboot
RUN echo 'echo "database = \"${DB_NAME}\"" >> /etc/icinga2/features-available/ido-mysql.conf' >> /bin/firstboot
RUN echo 'echo "}" >> /etc/icinga2/features-available/ido-mysql.conf' >> /bin/firstboot

#Wait until database service is started (in multi container environement)
RUN echo 'sleep 30' >> /bin/firstboot
RUN echo 'mysql -u ${DB_USER} -p${DB_PW} -h ${DB_SERVER} -P ${DB_PORT} -e "CREATE DATABASE ${DB_NAME}"' >> /bin/firstboot
RUN echo 'mysql -u ${DB_USER} -p${DB_PW} -h ${DB_SERVER} -D ${DB_NAME} -P ${DB_PORT} < /usr/share/icinga2-ido-mysql/schema/mysql.sql' >> /bin/firstboot

#Slimming down Docker containers
RUN apt-get clean
RUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

#Alter upstart script
RUN echo -n "/usr/sbin/icinga2 daemon & apache2 -D FOREGROUND" >> /bin/upstart

#Create volumes
VOLUME  ["/etc/icinga2", "/etc/icingaweb2"]